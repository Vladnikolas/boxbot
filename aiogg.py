import json
import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove

logging.basicConfig(level=logging.INFO)

# –ó–∞–º–µ–Ω–∏—Ç–µ TOKEN –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
bot = Bot("6200644854:AAEZ6FAsqSJnbKVPnTTihlDRiWYWDfBBCvI")
dp = Dispatcher(bot)

jdgs = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
j1=KeyboardButton('–í–ª–∞–¥–∏—Å–ª–∞–≤ –ù–∏–∫–æ–ª–µ–Ω–∫–æ')
j2=KeyboardButton('–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ù–∏–∫–æ–ª–µ–Ω–∫–æ')
j3=KeyboardButton('–ï–ª–∏–∑–∞–≤–µ—Ç–∞ –ö–æ—Å–µ–Ω–∫–æ')
j4=KeyboardButton('–ì–µ–æ—Ä–≥–∏–π –ü–æ–Ω—è—Ç–µ–Ω–∫–æ')
j5=KeyboardButton('–°—Ç–∞–Ω–∏—Å–ª–∞–≤ –ö–∞—Ä–∞–Ω–¥–µ–π')
j6=KeyboardButton('–ò–≤–∞–Ω –ì—Ä–∏–Ω—å')
j7=KeyboardButton('–í–∏–∫—Ç–æ—Ä –°–∫–æ–º–æ—Ä–æ—Ö–æ–≤')
j8=KeyboardButton('–ê–Ω–¥—Ä–µ–π –Ø–∫–æ–≤–µ–Ω–∫–æ')
j9=KeyboardButton('–ê—Ä—Ç—É—Ä –ë–µ–ª–∞–¥–∑–µ')
j10=KeyboardButton('–ü–∞–≤–µ–ª –í–∞—Å–∏–ª–∏–Ω—á—É–∫')
j11=KeyboardButton('–í–∞–¥–∏–º –ì–æ–π—Ç–µ–Ω—é–∫')
j12=KeyboardButton('–í–ª–∞–¥–∏–º–∏—Ä –ö–ª–∞–¥—å–∫–æ')
j13=KeyboardButton('–°–æ–∫–æ–ª–æ–≤ –†—É—Å–ª–∞–Ω')
j14=KeyboardButton('–ê–Ω–∞—Ç–æ–ª–∏–π –ù–æ–≤–æ—Å–µ–ª–µ—Ü')
j15=KeyboardButton('–î–º–∏—Ç—Ä–∏–π –õ–∞–∑–∞—Ä–µ–≤')
j16=KeyboardButton('–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –í–ª–∞—Å–µ–Ω–∫–æ')
j17=KeyboardButton('–ú–∏—Ö–∞–∏–ª –°—Ç–∞—Ö–Ω–∏–≤')
j18=KeyboardButton('–†–æ–º–∞–Ω –ß–µ—Ä–Ω—ã—à–æ–≤')
j19=KeyboardButton('–°—É—Ö–µ–±–∞—Ç–æ—Ä –ñ–∏–≥–∂–∂–∞–≤–∏–Ω')
j20=KeyboardButton('–ê–Ω—Ç–æ–Ω –ö–∞—Ä–∞–∫—É–ª–æ–≤')
jdgskb = jdgs.add(j1, j2, j3, j4, j5, j6, j7, j8, j9, j10, j11, j12, j13, j14, j15, j16, j17, j18, j19, j20)
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –±–æ—è—Ö
fights_data = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –±–æ—è—Ö –≤ —Ñ–∞–π–ª
def save_fights_data(fights_data):
    with open("fights_data.json", "w") as f:
        json.dump(fights_data, f)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –±–æ—è—Ö –∏–∑ —Ñ–∞–π–ª–∞
def load_fights_data():
    global fights_data
    try:
        with open("fights_data.json", "r") as f:
            fights_data = json.load(f)
    except FileNotFoundError:
        pass

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –±–æ—è—Ö –∏–∑ —Ñ–∞–π–ª–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞
load_fights_data()

# –õ–æ–≤–∏–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –±–æ–π"
@dp.callback_query_handler(lambda query: query.data == "new_rating")
async def process_callback_new_rating(query: types.CallbackQuery):
    # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
    await start_cmd_handler(query.message)
    await bot.answer_callback_query(query.id)

# –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
def generate_keyboard():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    row = []
    for i in range(1, 41):
        button = KeyboardButton(str(i))
        row.append(button)
        if i % 6 == 0:
            kb.add(*row)
            row = []
    if row:
        kb.add(*row)
    return kb

@dp.message_handler(commands=['start'])
async def start_cmd_handler(message: types.Message):
    chat_id = message.chat.id
    if chat_id in fights_data:
        del fights_data[chat_id]
    fights_data[chat_id] = {}
    kb = generate_keyboard()
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –¥–≤–æ–±–æ—é", reply_markup=kb)

@dp.message_handler(lambda message: "fight_number" not in fights_data[message.chat.id])
async def fight_number_handler(message: types.Message):
    chat_id = message.chat.id
    fight_number = int(message.text)
    fights_data[chat_id]["fight_number"] = fight_number
    await message.answer("–û–±–µ—Ä—ñ—Ç—å, –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å –ø—Ä—ñ–∑–≤–∏—â–µ —Ç–∞ —ñ–º'—è —Å—É–¥–¥—ñ:", reply_markup=jdgskb)

@dp.message_handler(lambda message: "judge_name" not in fights_data[message.chat.id])
async def judge_name_handler(message: types.Message):
    chat_id = message.chat.id
    judge_name = message.text
    fights_data[chat_id]["judge_name"] = judge_name
    if "judge_name" not in fights_data[chat_id]:
        return
        await message.answer("–û–±–µ—Ä—ñ—Ç—å, –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å –ø—Ä—ñ–∑–≤–∏—â–µ —Ç–∞ —ñ–º'—è —Å—É–¥–¥—ñ", reply_markup=jdgskb)
    else:
        fight_number = fights_data[chat_id]["fight_number"]
        if fight_number in fights_data[chat_id]:
            await message.answer(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–æ—è ‚Ññ{fight_number} —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –Ω–æ–º–µ—Ä –±–æ—è.")
        else:
            fights_data[chat_id][fight_number] = {}
            keyboard = InlineKeyboardMarkup(resize_keyboard=False)
            keyboard.row(InlineKeyboardButton("10", callback_data=f"{fight_number}_1_red_10"), InlineKeyboardButton("9", callback_data=f"{fight_number}_1_red_9"))
            keyboard.row(InlineKeyboardButton("8", callback_data=f"{fight_number}_1_red_8"),InlineKeyboardButton("7", callback_data=f"{fight_number}_1_red_7"))
            keyboard.row(InlineKeyboardButton("KO", callback_data=f"{fight_number}_KO"))
            keyboard.row(InlineKeyboardButton("RSC", callback_data=f"{fight_number}_RSC"), InlineKeyboardButton("RSC-I", callback_data=f"{fight_number}_RSC-I"))
            keyboard.row(InlineKeyboardButton("ABD", callback_data=f"{fight_number}_ABD"), InlineKeyboardButton("DSQ", callback_data=f"{fight_number}_DSQ"))
            await message.answer(f"üü•üü•üü•üü•üü•üü•üü•üü•üü•üü•\n–†–∞—É–Ω–¥ 1. –û—Ü—ñ–Ω—ñ—Ç—å –±–æ–∫—Å–µ—Ä–∞ \n—á–µ—Ä–≤–æ–Ω–æ–≥–æ –∫—É—Ç–∞:\nüü•üü•üü•üü•üü•üü•üü•üü•üü•üü•", reply_markup=keyboard)

@dp.callback_query_handler()
async def callback_query_handler(query: types.CallbackQuery):
    data = query.data.split("_")
    chat_id = query.message.chat.id
    fight_number = int(data[0])
    if len(data) == 2:
        # –î–æ—Å—Ä–æ—á–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –±–æ—è
        result = data[1]
        keyboard = InlineKeyboardMarkup()
        keyboard.row(InlineKeyboardButton("–ß–µ—Ä–≤–æ–Ω–∏–π –∫—É—Ç", callback_data=f"{fight_number}_{result}_—á–µ—Ä–≤–æ–Ω–æ–≥–æ"), InlineKeyboardButton("–°–∏–Ω—ñ–π –∫—É—Ç", callback_data=f"{fight_number}_{result}_—Å–∏–Ω—å–æ–≥–æ"))
        await query.message.edit_text(f"–ü–µ—Ä–µ–º–æ–∂–µ—Ü—å —É –∑–≤'—è–∑–∫—É –∑ {result}:", reply_markup=keyboard)
    elif len(data) == 3:
        # –ü–æ–±–µ–¥–∏—Ç–µ–ª—å –¥–æ—Å—Ä–æ—á–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –±–æ—è
        result = data[1]
        winner = data[2]
        red_total = 0
        blue_total = 0
        rounds_text = ""
        for round_number, round_data in fights_data[chat_id][fight_number].items():
                    red_score = round_data["red"]
                    blue_score = round_data["blue"]
                    red_total += red_score
                    blue_total += blue_score
                    rounds_text += f"\n–†–∞—É–Ω–¥ {round_number}            |            {red_score}:{blue_score}"
        judge_name = fights_data[chat_id]["judge_name"]
        text = f"ü•ä–î–≤–æ–±—ñ–π –Ω–æ–º–µ—Ä - {fight_number}\nüë®‚Äç‚öñÔ∏è–°—É–¥–¥—è-{judge_name}\n{rounds_text}\n\n–í—Å—å–æ–≥–æ-{red_total}üî¥:üîµ{blue_total}\n–ü–µ—Ä–µ–º–æ–≥–∞ {winner} –∫—É—Ç–∞ —É –∑–≤'—è–∑–∫—É –∑ {result}"
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
        button = InlineKeyboardButton("–ü–æ—á–∞—Ç–∏ –Ω–æ–≤—É –æ—Ü—ñ–Ω–∫—É", callback_data="new_rating")
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        nr = InlineKeyboardMarkup().add(button)
        await query.message.edit_text(text, reply_markup=nr)
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç (–∑–∞–º–µ–Ω–∏—Ç–µ CHAT_ID –Ω–∞ ID —á–∞—Ç–∞)
        await bot.send_message(chat_id=807894109, text=text)
        save_fights_data(fights_data)
    else:
        round_number = int(data[1])
        corner = data[2]
        score = int(data[3])
        if round_number not in fights_data[chat_id][fight_number]:
            fights_data[chat_id][fight_number][round_number] = {}
        fights_data[chat_id][fight_number][round_number][corner] = score
        if corner == "red":
            # –û—Ü–µ–Ω–∫–∞ —Å–∏–Ω–µ–≥–æ —É–≥–ª–∞
            keyboard = InlineKeyboardMarkup(row_width=2)
            keyboard.row(InlineKeyboardButton("10", callback_data=f"{fight_number}_{round_number}_blue_10"), InlineKeyboardButton("9", callback_data=f"{fight_number}_{round_number}_blue_9"))
            keyboard.row(InlineKeyboardButton("8", callback_data=f"{fight_number}_{round_number}_blue_8"), InlineKeyboardButton("7", callback_data=f"{fight_number}_{round_number}_blue_7"))
            keyboard.row(InlineKeyboardButton("KO", callback_data=f"{fight_number}_KO"))
            keyboard.row(InlineKeyboardButton("RSC", callback_data=f"{fight_number}_RSC"), InlineKeyboardButton("RSC-I", callback_data=f"{fight_number}_RSC-I"))
            keyboard.row(InlineKeyboardButton("ABD", callback_data=f"{fight_number}_ABD"), InlineKeyboardButton("DSQ", callback_data=f"{fight_number}_DSQ"))
            await query.message.edit_text(f"üü¶üü¶üü¶üü¶üü¶üü¶üü¶üü¶üü¶üü¶\n–†–∞—É–Ω–¥ {round_number}. –û—Ü—ñ–Ω—ñ—Ç—å –±–æ–∫—Å–µ—Ä–∞ \n—Å–∏–Ω—å–æ–≥–æ –∫—É—Ç–∞:\nüü¶üü¶üü¶üü¶üü¶üü¶üü¶üü¶üü¶üü¶", reply_markup=keyboard)
        else:
            if round_number < 3:
                # –°–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥
                next_round = round_number + 1
                keyboard = InlineKeyboardMarkup(resize_keyboard=True)
                keyboard.row(InlineKeyboardButton("10", callback_data=f"{fight_number}_{next_round}_red_10"), InlineKeyboardButton("9", callback_data=f"{fight_number}_{next_round}_red_9"))
                keyboard.row(InlineKeyboardButton("8", callback_data=f"{fight_number}_{next_round}_red_8"), InlineKeyboardButton("7", callback_data=f"{fight_number}_{next_round}_red_7"))
                keyboard.row(InlineKeyboardButton("KO", callback_data=f"{fight_number}_KO"))
                keyboard.row(InlineKeyboardButton("RSC", callback_data=f"{fight_number}_RSC"), InlineKeyboardButton("RSC-I", callback_data=f"{fight_number}_RSC-I"))
                keyboard.row(InlineKeyboardButton("ABD", callback_data=f"{fight_number}_ABD"), InlineKeyboardButton("DSQ", callback_data=f"{fight_number}_DSQ"))
                await query.message.edit_text(f"üü•üü•üü•üü•üü•üü•üü•üü•üü•üü•\n–†–∞—É–Ω–¥ {next_round}. –û—Ü—ñ–Ω—ñ—Ç—å –±–æ–∫—Å–µ—Ä–∞ \n—á–µ—Ä–≤–æ–Ω–æ–≥–æ –∫—É—Ç–∞:\nüü•üü•üü•üü•üü•üü•üü•üü•üü•üü•", reply_markup=keyboard)
            else:
                    # –ö–æ–Ω–µ—Ü –±–æ—è
                    red_total = 0
                    blue_total = 0
                    rounds_text = ""
                    for round_number, round_data in fights_data[chat_id][fight_number].items():
                        red_score = round_data["red"]
                        blue_score = round_data["blue"]
                        red_total += red_score
                        blue_total += blue_score
                        rounds_text += f"\n–†–∞—É–Ω–¥ {round_number}            |            {red_score}:{blue_score}"
                        if red_total == blue_total:
                            result = f"—Ä—ñ–≤–Ω–æ—é –∫—ñ–ª—å–∫—ñ—Å—Ç—é –±–∞–ª—ñ–≤"
                            keyboard = InlineKeyboardMarkup()
                            keyboard.row(InlineKeyboardButton("–ß–µ—Ä–≤–æ–Ω–∏–π –∫—É—Ç", callback_data=f"{fight_number}_{result}_—á–µ—Ä–≤–æ–Ω–æ–≥–æ"), InlineKeyboardButton("–°–∏–Ω—ñ–π –∫—É—Ç", callback_data=f"{fight_number}_{result}_—Å–∏–Ω—å–æ–≥–æ"))
                            await query.message.edit_text(f"–†–∞–≤–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤. –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è.", reply_markup=keyboard)
                            save_fights_data(fights_data)
                        else:
                            judge_name = fights_data[chat_id]["judge_name"]
                            text = f"ü•ä–î–≤–æ–±—ñ–π –Ω–æ–º–µ—Ä - {fight_number}\nüë®‚Äç‚öñÔ∏è–°—É–¥–¥—è-{judge_name}\n{rounds_text}\n\n–í—Å—å–æ–≥–æ-{red_total}üî¥:üîµ{blue_total}"
                            # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
                            button = InlineKeyboardButton("–ü–æ—á–∞—Ç–∏ –Ω–æ–≤—É –æ—Ü—ñ–Ω–∫—É", callback_data="new_rating")
                            # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
                            nr = InlineKeyboardMarkup().add(button)
                            await bot.send_message(chat_id=807894109, text=text)
                            await query.message.edit_text(text, reply_markup=nr)
                            # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –±–æ—è—Ö –≤ —Ñ–∞–π–ª
                            save_fights_data(fights_data)
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
